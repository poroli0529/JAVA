객체  :  인스턴스 + (메소드)
메소드는 객체의 동작
[반환형] [메서드이름](매개변수선언){ 실행문 } 
-	필드를 읽고 수정하는 역할
-	다른 객체를 생성해서 다양한 기능을 수행
-	객체 간의 데이터 전달의 수단으로 사용
메소드 이름 규칙
1.	숫자로 시작하면 안됨
2.	$ 와 _를 제외한 사용하면 안됨.
3.	관례적으로 메소드명은 소문자로 작성
4.	두단어 이상 조합시 카멜표기법
메소드 리턴 타입 
정의 : 메소드를 실행한 후 어떤 자료형을 리턴하는가?
void 형에서는 리턴이 없다.
메소드 매개 변수
매개변수는 메소드를 실행할 때 필요한 데이터를 입력 받기 위해 사용
없어도 상관없다.

Return 문 
메소드 실행을 중지 + 원하는 값을 반환함. (반환하거나 / return만 하거나)

메소드 오버로딩 
1.	클래스 내에  2. 같은 이름의 메소드를 3. 매개변수의 개수,순서 자료형이 다르게
메소드를 여러 개 재정의하는 것을 메소드 오버로딩이라고한다.
2.	리턴 타입은 바뀌어도 상관없다.

메소드의 인자값을 모르는 것을 방지하고 싶어서 사용하는 방법


Final 필드 
최종적인 값을 갖고 있는 필드 
실행도중 값 변경할 수 없는 필드 << 프로그램 실행중에는 값변경이 불가능.
단 한번의 초기값만 지정 가능 1. 필드 선언 시 초기값 대입, 2.생성자에서 초기값 대입

상수필드
Static final 필드 
상수 = 정적 final 필드  c언어의 const 키워드가 자바에서는 static final 키워드인가봐.
상수 : Static final 
Static : 전역변수인  참조형 객체 전체가 공유하면서 사용하는 , 클래스 객체 전체 공통 사용하는 
final : 한번 입력되면 바뀌지 않는 
static final 클래스 객체가 공유하지만 한 번 입력된 값으로 바꿀 수 없는
>> 객체 생성자로 초기화한다는 것은 불가능하다. static으로 만든다는 것은 인스턴스 생성과 관계없이 클래스가 로드될 때 메모리에 올라가야한다는 것을 의미합니다.
그래서 생성자가 호출된다는 것은 코드 로드 단계를 지났다는 것을 의미하므로 static final은 생성자 초기화가 불가능합니다.
	선언시 초기화만 가능 ! 







패키지
클래스를 기능별로 묶어서 그룹 이름을 붙여 놓은 것
	파일들을 관리하기 위한 디렉터리와 같은 기능
	패키지의 물리적인 형태는 파일 시스템의 폴더와 유사
클래스 이름의 일부
	클래스를 유일하게 만들어주는 식별자
	전체클래스이름 = 상위패키지.하위패키지.클래스명
	클래스명이 같아도 패키지명이 다르면 다른 클래스 취급

패키지 << 클래스를 선언할 때 패키지 결정됨.
	클래스 선언 시 포함될 패키지도 선언한다.
	클래스파일을 다른 패키지 파일에서 실행시키면 실행되지않음.
: 클래스파일안에는 패키지.클래스명으로 패키지가 써져있어 동일한 패키지 안에서만
사용 가능

다른 패키지의 클래스 사용방법 import
1.	import문은 항상 클래스와 패키지 선언사이
2.	import pkage.*  pkage 패키지의 모든 파일 사용하기 싶을떄
3.	가장 중요한건 import될 때 하위패키지는 import대상이아님. 상위패키지.하위패키지.클래스까지 명시해야함.







15주차 제너릭타입 
제너릭타입 선언시 컴파일러가 제너릭 키워드가 선언된 클래스를 치환해서 코드를 해준다.
<type> 안에는 클래스, 인터페이스만 타입파라미터로 들어간다. 그래서 기본자료형의 경우 Interger와 같이 기본자료형을 클래스로 구현해 놓은 키워드를 사용한다.

컬렉션 프레임워크
컬렉션 : 요소(객체)를 수집해 놓은 것 
프로그래밍에서의 의미 : 프로그래머가 쓰면 편한 기능을 제공하는 기능들 
리스트 컬렉션 
인덱스 있고 , 중복해서 객체 저장이 가능, arraylist, vector , linkedlist가 있음.
미리 컬렉션에서 메소드를 다 구현해 놓아서 사용가능.
Arraylist : 일반 배열과 같은 기능을 갖지만 삭제시 인덱스 자동 정렬 기능이 있다.
Vector : 동기화된 메소드로 구성 
>> 멀티스레드 환경시에 동기화된 메소드를 통해 객체를 다룰 수 있다.
Linked list : 포인터로 서로 연결해서 중간 순서 삽입, 삭제를 쉽게 할 수 있게한다.

SET 컬렉션
수학의 집합과 비슷함.
데이터에 순서가 없고 집한 안의 원소처럼 순서없이 존재만함.

